import{_ as s,c as t,o as l,a2 as p}from"./chunks/framework.DYuVWWma.js";const n="/assets/llm_update_plugin.B57AFgZv.png",h="/assets/siliconflow_api.Cm-4WwiW.png",i="/assets/help_llm.COZicl_S.png",e="/assets/open_llm_zh.BIxQkIC9.png",o="/assets/input_api_key.CTRGatep.png",r="/assets/deepseek_api.BHnqOM5w.png",d="/assets/insert_deepseek_api.BTQkfe1d.png",y=JSON.parse('{"title":"AI大模型集成功能安装","description":"","frontmatter":{},"headers":[],"relativePath":"docs/install-llm-plugin.md","filePath":"docs/install-llm-plugin.md","lastUpdated":1750130060000}'),k={name:"docs/install-llm-plugin.md"};function c(u,a,g,E,m,b){return l(),t("div",null,a[0]||(a[0]=[p(`<h1 id="ai大模型集成功能安装" tabindex="-1">AI大模型集成功能安装 <a class="header-anchor" href="#ai大模型集成功能安装" aria-label="Permalink to &quot;AI大模型集成功能安装&quot;">​</a></h1><p>我们在此介绍如何使用Liii STEM内置的大模型集成功能。此功能为Liii STEM专属。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><h3 id="支持的模型" tabindex="-1">支持的模型 <a class="header-anchor" href="#支持的模型" aria-label="Permalink to &quot;支持的模型&quot;">​</a></h3><p>目前支持的模型有：</p><ul><li><a href="https://www.DeepSeek.com/" target="_blank" rel="noreferrer">DeepSeek V3</a> (硅基流动，DeepSeek API)</li><li><a href="https://www.DeepSeek.com/" target="_blank" rel="noreferrer">DeepSeek R1</a> (硅基流动，DeepSeek API)</li><li><a href="https://github.com/QwenLM/Qwen" target="_blank" rel="noreferrer">Qwen-2.5 72B</a> (DeepSeek API)</li><li><a href="https://github.com/QwenLM/Qwen" target="_blank" rel="noreferrer">Qwen-2.5 7B</a> (DeepSeek API)</li></ul><h3 id="pandoc-仅针对macos和linux" tabindex="-1">Pandoc: 仅针对macOS和Linux <a class="header-anchor" href="#pandoc-仅针对macos和linux" aria-label="Permalink to &quot;Pandoc: 仅针对macOS和Linux&quot;">​</a></h3><p>同时，对于<code>macOS</code>和<code>Linux</code>用户，在使用前需要安装pandoc</p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># macOS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pandoc</span></span></code></pre></div><p>或者</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ubuntu</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pandoc</span></span></code></pre></div><p>安装完pandoc后，您需要在Liii STEM中更新LLM插件，如下图所示 <img src="`+n+'" alt="update_plugin"></p><p>我们目前内置硅基流动与DeepSeek的API，您不需要做任何配置就可以使用我们的大模型功能。具体使用可以参考<a href="./guide-tuto-llm-plug.html">内置大模型使用教学</a></p><p>我们也支持您手动输入自己的API Key，获取API的教程在<a href="#deepseek_api">如何获取DeepSeek API</a>和<a href="#siliconflow-api">如何获取硅基流动API</a>。</p><p><a id="siliconflow-api"></a></p><h2 id="硅基流动api获取" tabindex="-1">硅基流动API获取 <a class="header-anchor" href="#硅基流动api获取" aria-label="Permalink to &quot;硅基流动API获取&quot;">​</a></h2><p>使用 Liii STEM 的大模型插件需要您手动输入API Key。我们目前支持硅基流动与Deepseek的API，以下是获取硅基流动API的教程。</p><h3 id="第一步在硅基流动官网申请账号" tabindex="-1">第一步在硅基流动官网申请账号 <a class="header-anchor" href="#第一步在硅基流动官网申请账号" aria-label="Permalink to &quot;第一步在硅基流动官网申请账号&quot;">​</a></h3><p>硅基流动官网：<a href="https://cloud.siliconflow.cn/i/h8qNv0VJ" target="_blank" rel="noreferrer">https://cloud.siliconflow.cn/i/h8qNv0VJ</a></p><p>在使用之前，你需要先在硅基流动官网申请账号，并获取对应的API Key，点击复制密钥。如下图所示：</p><p><img src="'+h+'" alt="api_key"></p><h3 id="第二步打开liiistem配置密钥" tabindex="-1">第二步打开LiiiSTEM配置密钥 <a class="header-anchor" href="#第二步打开liiistem配置密钥" aria-label="Permalink to &quot;第二步打开LiiiSTEM配置密钥&quot;">​</a></h3><p>在Liii STEM里打开<code>帮助</code> -&gt; <code>插件</code> -&gt; <code>LLM</code>, 如下图所示：</p><p><img src="'+i+'" alt="help_llm"></p><p>然后双击打开<code>llm_zh.tm</code>这个文档</p><p><img src="'+e+'" alt="llm_zh"></p><p>将您复制的API Key粘贴到如下图位置，然后点击保存。</p><p><img src="'+o+'" alt="insert_api_key"></p><p>保存后点击菜单里的<code>Literate</code> -&gt; <code>Build buffer</code>, 之后便可以享受我们的大模型插件了！</p><p><a id="deepseek_api"></a></p><h2 id="deepseek-api获取" tabindex="-1">DeepSeek API获取 <a class="header-anchor" href="#deepseek-api获取" aria-label="Permalink to &quot;DeepSeek API获取&quot;">​</a></h2><p>使用 Liii STEM 的大模型插件需要您手动输入API Key。我们目前支持硅基流动与DeepSeek的API，以下是获取 DeepSeek API的教程。</p><h3 id="第一步在deepseek官网申请账号" tabindex="-1">第一步在DeepSeek官网申请账号 <a class="header-anchor" href="#第一步在deepseek官网申请账号" aria-label="Permalink to &quot;第一步在DeepSeek官网申请账号&quot;">​</a></h3><p>使用<code>DeepSeek V3</code>和 <code>R1</code>之前，你需要先在<a href="https://platform.deepseek.com/api_keys" target="_blank" rel="noreferrer">DeepSeek的官网</a>申请账号，并获取对应的API Key。如下图所示。</p><p><img src="'+r+'" alt="deepseek_api"></p><h3 id="第二步打开liiistem配置密钥-1" tabindex="-1">第二步打开LiiiSTEM配置密钥 <a class="header-anchor" href="#第二步打开liiistem配置密钥-1" aria-label="Permalink to &quot;第二步打开LiiiSTEM配置密钥&quot;">​</a></h3><p>在Liii STEM里打开<code>帮助</code> -&gt; <code>插件</code> -&gt; <code>LLM</code>, 如下图所示 <img src="'+i+'" alt="help_llm"></p><p>然后打开<code>llm_zh.tm</code>这个文档</p><p><img src="'+e+'" alt="llm_zh"></p><p>将您复制的API Key粘贴到如下图位置，然后点击保存。</p><p><img src="'+d+`" alt="deepseek_api_key"></p><p>保存后点击菜单里的<code>Literate</code> -&gt; <code>Build buffer</code>, 之后便可以享受我们的大模型插件了！</p><h2 id="代理配置" tabindex="-1">代理配置 <a class="header-anchor" href="#代理配置" aria-label="Permalink to &quot;代理配置&quot;">​</a></h2><p>在某些网络环境下，可能需要通过代理服务器来访问模型API服务。Liii STEM的LLM插件支持为不同的API提供商配置独立的代理。</p><h3 id="代理配置方法" tabindex="-1">代理配置方法 <a class="header-anchor" href="#代理配置方法" aria-label="Permalink to &quot;代理配置方法&quot;">​</a></h3><p>代理配置可以通过打开<code>帮助</code> -&gt; <code>插件</code> -&gt; <code>LLM</code>，查看详细的帮助文档，直接在文档中配置。<br> 也可以在<code>$HOME/.liii_llm_key.json</code>文件中进行。每个API提供商可以单独配置代理设置。</p><h4 id="基本格式" tabindex="-1">基本格式 <a class="header-anchor" href="#基本格式" aria-label="Permalink to &quot;基本格式&quot;">​</a></h4><p>代理配置使用以下格式：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;提供商域名&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;api-key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;您的API密钥&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;proxy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;http&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;HTTP代理地址&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;https&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;HTTPS代理地址&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="openai代理配置示例" tabindex="-1">OpenAI代理配置示例 <a class="header-anchor" href="#openai代理配置示例" aria-label="Permalink to &quot;OpenAI代理配置示例&quot;">​</a></h4><p>以下是为OpenAI配置代理的示例：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;openai.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;api-key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Fill in your secret key here&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;proxy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;http&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://127.0.0.1:7890&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;https&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://127.0.0.1:7890&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="不使用代理" tabindex="-1">不使用代理 <a class="header-anchor" href="#不使用代理" aria-label="Permalink to &quot;不使用代理&quot;">​</a></h4><p>如果不需要使用代理，有两种方式处理：</p><ol><li>将&quot;proxy&quot;设置为空对象：</li></ol><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;proxy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:{}</span></span></code></pre></div><ol start="2"><li>完全删除&quot;proxy&quot;字段</li></ol><h4 id="生效方式" tabindex="-1">生效方式 <a class="header-anchor" href="#生效方式" aria-label="Permalink to &quot;生效方式&quot;">​</a></h4><p>如果你在帮助文档中修改配置后，需要：</p><ol><li>点击菜单项<code>Literate→Build buffer</code></li><li>重启Liii STEM使配置生效</li></ol><p>如果你是直接修改<code>$HOME/.liii_llm_key.json</code>文件：</p><ol><li>保存文件</li><li>重启Liii STEM使配置生效</li></ol><p><br><br><br></p><h3 id="代理配置常见问题及解决方法" tabindex="-1">代理配置常见问题及解决方法 <a class="header-anchor" href="#代理配置常见问题及解决方法" aria-label="Permalink to &quot;代理配置常见问题及解决方法&quot;">​</a></h3><p>在配置和使用代理时，如果不能正常使用，可能是遇到了以下常见问题：</p><h4 id="_1-连接超时" tabindex="-1">1. 连接超时 <a class="header-anchor" href="#_1-连接超时" aria-label="Permalink to &quot;1. 连接超时&quot;">​</a></h4><p><strong>问题表现</strong>：配置代理后，请求API时出现长时间等待。</p><p><strong>解决方法</strong>：</p><ul><li>检查代理工具是否正常运行</li><li>尝试更换线路</li><li>确认代理地址和端口是否正确</li><li>临时关闭防火墙或安全软件，检查是否为其拦截</li></ul><br><h4 id="_2-使用时报错" tabindex="-1">2. 使用时报错 <a class="header-anchor" href="#_2-使用时报错" aria-label="Permalink to &quot;2. 使用时报错&quot;">​</a></h4><p><strong>问题表现</strong>：配置代理后使用大模型时报错</p><p><strong>解决方法</strong>：</p><ul><li>如果你配置的代理监听的协议是HTTPS，如<code>https://127.0.0.1:7890</code>，确保代理服务器支持HTTPS请求。</li><li>绝大多数本地代理工具（如 Clash, V2RayN, Shadowsocks 客户端等）监听端口时，期望接收的是 HTTP 或 SOCKS 协议的连接，而不是 HTTPS 连接。</li><li>检查配置文件的JSON格式是否有错误，包括逗号、引号等</li></ul><p>配置代理是解决网络访问限制的重要手段，尤其是对于OpenAI等服务。如果以上方法无法解决您的问题，可以联系我们获取更详细的帮助。</p>`,75)]))}const _=s(k,[["render",c]]);export{y as __pageData,_ as default};
